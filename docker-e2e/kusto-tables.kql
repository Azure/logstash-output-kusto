.create-merge table PaloAltoRaw([timestamp]:datetime , OriginalRecord:string)

.create table PaloAltoRaw ingestion json mapping 'fwmaps' '[{"column":"timestamp","path":"$.@timestamp"},{"column":"OriginalRecord","path":"$.message"}]'

.create table PaloAltoProcessed (CEFDateTime:datetime, Event:string, MessageType:string, SourceIP:string, DestIP:string,Action:string)

// the function that parses this
.create-or-alter  function
 with (docstring = 'Parses raw PaloAlto CEF into some specific columns', folder = 'UpdatePolicyFunctions')
     ExtractPaloAltoLogs()  
    {
        PaloAltoRaw  
        | extend logs = split(OriginalRecord, "|")
        | extend cefdtversion=tostring(logs[0])
        | extend VersionTimePart = split(cefdtversion, " ")
        | extend CEFDateTime = todatetime(VersionTimePart[0])
        | extend Source = VersionTimePart[1]
        | extend CEFVersion = VersionTimePart[3]
        | extend Vendor = replace_string(tostring(logs[1]), "#012"," ")
        | extend App = logs[2]
        | extend Version = logs[3]
        | extend Event = tostring(logs[4])
        | extend MessageType = tostring(logs[5]) 
        | extend Type = logs[6]
        | extend kv= tostring(logs[7])
        | extend Extension = replace_string(kv, "#012"," ")
        | parse-kv Extension as (src:string, dst:string, proto:string, spt:long, dpt:long, act:string,msg:string,rt:string,PanDynamicUsrgrp:string) with(kv_delimiter="=", pair_delimiter=" ", quote='"',greedy=true)
        | extend rtdttm=todatetime(rt) 
        | project CEFDateTime,Event,MessageType,SourceIP=src,DestIP=dst,Action=act
}


// Now that the function is created, mark this as an update policy

.alter table PaloAltoProcessed policy update @'[{ "IsEnabled": true, "Source": "PaloAltoRaw", "Query": "ExtractPaloAltoLogs()", "IsTransactional": true, "PropagateIngestionProperties": false}]'

flowLogs
| count 

PaloAltoRaw
| count 


PaloAltoProcessed
| count


.show commands-and-queries  | where LastUpdatedOn >= ago(5m) | where Text has ".ingest" | where Database == "e2e" | take 20

.show ingestion failures | where FailedOn >= ago(15m) | where Database == "e2e" | take 20

.create table flowLogs (
    Time:datetime,
    macAddress:string,
    category:string,
    flowLogVersion:int,
    nsgResourceID:string,
    rule:string,
    macAddress2:string,
    Timestamp:string,
    srcIP:string,
    dstIP:string,
    srcPort:string,
    dstPort:string,
    Protocol:string,
    Direction:string,
    Decision:string,
    State:string,
    PacketsSrcToDst:int,
    BytesSrcToDst:int,
    PacketsDstToSrc:int,
    BytesDstToSrc:int
)

.alter table flowLogs policy  ingestionbatching @'{"MaximumBatchingTimeSpan":"00:00:05", "MaximumNumberOfItems": 100, "MaximumRawDataSizeMB": 100}'

.create table flowLogs ingestion json mapping "flowLogsMapping" '[{"column":"category","path":"$.category","datatype":"string","transform":""},{"column":"State","path":"$.State","datatype":"string","transform":""},    {"column":"Protocol","path":"$.Protocol","datatype":"string","transform":""},{"column":"dstIP","path":"$.dstIP","datatype":"string","transform":""},    {"column":"flowLogVersion","path":"$.flowLogVersion","datatype":"int","transform":""},    {"column":"srcIP","path":"$.srcIP","datatype":"string","transform":""},    {"column":"ResourceGroup","path":"$.ResourceGroup","datatype":"string","transform":""},    {"column":"macAddress2","path":"$.macAddress2","datatype":"string","transform":""},    {"column":"PacketsSrcToDst","path":"$.PacketsSrcToDst","datatype":"int","transform":""},    {"column":"Direction","path":"$.Direction","datatype":"string","transform":""},    {"column":"Decision","path":"$.Decision","datatype":"string","transform":""},    {"column":"BytesSrcToDst","path":"$.BytesSrcToDst","datatype":"int","transform":""},    {"column":"BytesDstToSrc","path":"$.BytesDstToSrc","datatype":"int","transform":""},    {"column":"macAddress","path":"$.macAddress","datatype":"string","transform":""},    {"column":"Time","path":"$.Time","datatype":"datetime","transform":""},    {"column":"rule","path":"$.rule","datatype":"string","transform":""},    {"column":"NetworkSecurityGroup","path":"$.NetworkSecurityGroup","datatype":"string","transform":""},    {"column":"Subscription","path":"$.Subscription","datatype":"string","transform":""},    {"column":"PacketsDstToSrc","path":"$.PacketsDstToSrc","datatype":"int","transform":""},    {"column":"Timestamp","path":"$.Timestamp","datatype":"string","transform":""},    {"column":"nsgResourceID","path":"$.nsgResourceID","datatype":"string","transform":""},    {"column":"dstPort","path":"$.dstPort","datatype":"string","transform":""}, {"column":"srcPort","path":"$.srcPort","datatype":"string","transform":""}]'